<div id="password_info">
  <p class="lead">Based on your user type, your new password must meet these requirements:</p>
  <div id="length" class="invalid">
    <span  id="criterion-met" class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    At least <strong><%=@conn.assigns.max_effective_policy.min_length%></strong> characters</strong>
  </div>
  <div id="classes" class="invalid">
    <span  id="criterion-met" class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    At least <strong><%=@conn.assigns.max_effective_policy.min_char_classes%> different kinds of characters</strong>
    <span class="more-info">
      <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
      <span class="more-info-text">
        Character classes include uppercase, lowercase, digits, symbols, whitespace, emoji, etc.
      </span>
    </span>
  </div>
  <div id="match" class="invalid">
    <span  id="criterion-met" class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    Passwords must match
  </div>
  <br>
  <%= link "More info on passwords", to: "https://blog.avast.com/strong-password-ideas", target: "_blank" %>
</div>
<script>
  function charInfo() {
    $('#char_info').show()
  }

  function numClasses(password) {
    function passwordMatch(regex) {
      return regex.test(password);
    };
    var classes = [/[A-Z]/,/[a-z]/,/\d/, /\s/, /(?=\W)(?=\D)(?=\S)/]
    return classes
     .map(passwordMatch)
     .map(function(bool) { if (bool == true) { return 1; } else {return 0; }; })
     .reduce(function(a,b) {return a + b;});
  }

  // password criteria feedback
  $(document).ready(function() {

    $('input[type=password]').keyup(function() {
      // set password variable
      var password_confirmation = $('.password-confirmation').val();
      var password = $('.new-password').val();
      //validate the length
      if ( password.length < <%=@conn.assigns.max_effective_policy.min_length%> ) {
        $('#length').removeClass('valid').addClass('invalid');
      } else {
        $('#length').removeClass('invalid').addClass('valid');
      }
      // validate the number of character classes
      if (numClasses(password) < <%=@conn.assigns.max_effective_policy.min_char_classes%>) {
        $('#classes').removeClass('valid').addClass('invalid');
      } else {
        $('#classes').removeClass('invalid').addClass('valid');
      }
      if ( password != password_confirmation || password.length==0 || password_confirmation.length==0) {
        $('#match').removeClass('valid').addClass('invalid');
      } else {
        $('#match').removeClass('invalid').addClass('valid');
      }
      // update visual cues accordingly
      $('#password_info').find('.valid').find('#criterion-met').removeClass('glyphicon-exclamation-sign').addClass('glyphicon-ok');
      $('#password_info').find('.invalid').find('#criterion-met').removeClass('glyphicon-ok').addClass('glyphicon-exclamation-sign');
    });

  });
</script>
